{"version":3,"file":"static/js/292.59fa0329.chunk.js","mappings":"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","sources":["api/movies.js","components/SearchList/SearchList.js","webpack://react-homework-template/./src/components/SearchInput/searchinput.module.css?f793","components/SearchInput/SearchInput.js","../node_modules/nanoid/index.browser.js","components/Movies/movies.module.css","components/Movies/Movies.js","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd820b0a1af251d95ab4309bc7eecf77f',\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingMovies = () => {\n  return instance.get('/trending/movie/day');\n};\n\nexport const getSearchingMovies = query => {\n  return instance.get(`/search/movie?query=${query}`);\n};\n\nexport const getMovieDetails = movieId => {\n  return instance.get(`/movie/${movieId}`);\n};\n\nexport const getMovieCredits = movieId => {\n  return instance.get(`/movie/${movieId}/credits`);\n};\n\nexport const getMovieReviews = movieId => {\n  return instance.get(`/movie/${movieId}/reviews`, {\n    params: {\n      page: 1,\n    },\n  });\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nconst SearchList = ({ items }) => {\n  const location = useLocation();\n\n  const elements = items.map(({ id, title }) => (\n    <li key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        {title}\n      </Link>\n    </li>\n  ));\n  return <ol>{elements}</ol>;\n};\n\nexport default SearchList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"searchinput_form__G2nBo\",\"button\":\"searchinput_button__EFSXw\",\"button_label\":\"searchinput_button_label__EbsKI\",\"input\":\"searchinput_input__PAgmm\"};","import { useEffect, useMemo, useRef, useState } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport css from './searchinput.module.css';\n\nconst SearchInput = ({ onSubmit }) => {\n  const [state, setState] = useState({\n    search: '',\n  });\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({\n      search: '',\n    });\n  };\n\n  const searchId = useMemo(() => nanoid(), []);\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <button type=\"submit\" className={css.button}>\n        <span className={css.button_label}>Search</span>\n      </button>\n      <label htmlFor={searchId}></label>\n      <input\n        id={searchId}\n        ref={inputRef}\n        onChange={handleChange}\n        value={state.search}\n        className={css.input}\n        type=\"text\"\n        name=\"search\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n    </form>\n  );\n};\n\nexport default SearchInput;\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {};","import SearchList from 'components/SearchList/SearchList';\nimport SearchInput from 'components/SearchInput/SearchInput';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchingMovies } from 'api/movies';\nimport css from './movies.module.css';\n\nconst Movies = () => {\n  // const [searchingMovies, setSearchingMovies] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const search = searchParams.get('search');\n  // console.log('search:', search);\n  // const page = searchParams.get('page');\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const {\n          data: { results },\n        } = await getSearchingMovies(search);\n        setMovies(prevMovies =>\n          results?.length ? [...prevMovies, ...results] : prevMovies\n        );\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (search) {\n      fetchMovies();\n    }\n  }, [search]);\n\n  const handleSearch = ({ search }) => {\n    setSearchParams({ search });\n    setMovies([]);\n  };\n\n  return (\n    <>\n      <SearchInput onSubmit={handleSearch} />\n      {error && <p className={css.error}>{error}</p>}\n      {loading && <p>...Loading</p>}\n      {Boolean(movies.length) && <SearchList items={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import Movies from 'components/Movies/Movies';\n\nconst MoviesPage = () =>{\n    return (\n<>\n<Movies />\n</>\n    )\n}\n\nexport default MoviesPage;\n"],"names":["instance","axios","baseURL","params","api_key","language","getTrendingMovies","get","getSearchingMovies","query","concat","getMovieDetails","movieId","getMovieCredits","getMovieReviews","page","_ref","items","location","useLocation","elements","map","_ref2","id","title","_jsx","children","Link","to","state","from","onSubmit","_useState","useState","search","_useState2","_slicedToArray","setState","inputRef","useRef","useEffect","current","focus","searchId","useMemo","size","arguments","length","undefined","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","_jsxs","e","preventDefault","_objectSpread","className","css","type","htmlFor","ref","onChange","target","name","value","_defineProperty","autoComplete","autoFocus","placeholder","movies","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getSearchingMo","results","_context","prev","next","sent","data","prevMovies","_toConsumableArray","t0","message","finish","stop","apply","_Fragment","SearchInput","Boolean","SearchList","Movies"],"sourceRoot":""}