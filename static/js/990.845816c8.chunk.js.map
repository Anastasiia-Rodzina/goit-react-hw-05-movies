{"version":3,"file":"static/js/990.845816c8.chunk.js","mappings":"2QAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EAAoB,WAC/B,OAAON,EAASO,IAAI,sBACtB,EAEaC,EAAqB,SAAAC,GAChC,OAAOT,EAASO,IAAI,uBAADG,OAAwBD,GAC7C,EAEaE,EAAkB,SAAAC,GAC7B,OAAOZ,EAASO,IAAI,UAADG,OAAWE,GAChC,EAEaC,EAAkB,SAAAD,GAC7B,OAAOZ,EAASO,IAAI,UAADG,OAAWE,EAAO,YACvC,EAEaE,EAAkB,SAAAF,GAC7B,OAAOZ,EAASO,IAAI,UAADG,OAAWE,EAAO,YAAY,CAC/CT,OAAQ,CACNY,KAAM,IAGZ,C,sIC/BA,GAAiB,E,SCiDjB,EA7CuB,WACrB,IAAAC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEdf,GAAYkB,EAAAA,EAAAA,MAAZlB,SAERmB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEA,OAFAF,EAAAC,KAAA,EAEjBf,GAAW,GAAMc,EAAAE,KAAA,GAGP3B,EAAAA,EAAAA,IAAgBF,GAAS,KAAD,EAAAyB,EAAAE,EAAAG,KADxBJ,EAAOD,EAAfM,KAAQL,QAKVjB,EAAkB,OAAPiB,QAAO,IAAPA,GAAAA,EAASM,OAASN,EAAU,IAAIC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE3CV,EAASU,EAAAM,GAAMC,SAAS,QAEN,OAFMP,EAAAC,KAAA,GAExBf,GAAW,GAAOc,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAZ,EAAA,wBAErB,kBAfiB,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAkBlBlB,GACF,GAAG,CAACpB,IAEJ,IAAMuC,EAAW/B,EAAQgC,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OACjDC,EAAAA,EAAAA,MAAA,MAAaC,UAAWC,EAAAA,KAASC,SAAA,EAC/BH,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,WAASL,MACZM,EAAAA,EAAAA,KAAA,KAAAD,SAAIJ,MAFGF,EAGJ,IAGP,OACEG,EAAAA,EAAAA,MAAAK,EAAAA,SAAA,CAAAF,SAAA,CACGhC,IAASiC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAAA,MAAUC,SAAEhC,IACnCJ,IAAWqC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eACdG,QAAQ3C,EAAQwB,UAAWiB,EAAAA,EAAAA,KAAA,MAAAD,SAAKT,MAGvC,ECtCA,EARoB,WAChB,OACJU,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAF,UACAC,EAAAA,EAAAA,KAACG,EAAO,KAGR,C","sources":["api/movies.js","components/Reviews/reviews.module.css","components/Reviews/Reviews.js","pages/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd820b0a1af251d95ab4309bc7eecf77f',\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingMovies = () => {\n  return instance.get('/trending/movie/day');\n};\n\nexport const getSearchingMovies = query => {\n  return instance.get(`/search/movie?query=${query}`);\n};\n\nexport const getMovieDetails = movieId => {\n  return instance.get(`/movie/${movieId}`);\n};\n\nexport const getMovieCredits = movieId => {\n  return instance.get(`/movie/${movieId}/credits`);\n};\n\nexport const getMovieReviews = movieId => {\n  return instance.get(`/movie/${movieId}/reviews`, {\n    params: {\n      page: 1,\n    },\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'api/movies';\nimport css from './reviews.module.css';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setLoading(true);\n        const {\n          data: { results },\n        } = await getMovieReviews(movieId);\n        // setCast(prevCast =>\n        //   results?.length ? [...prevCast, ...results] : prevCast\n        // );\n        setReviews(results?.length ? results : []);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    //   /* <p>We don`t have any reviews for this movie</p> */\n\n    fetchReviews();\n  }, [movieId]);\n\n  const elements = reviews.map(({ id, author, content }) => (\n    <li key={id} className={css.item}>\n      <b>Author: {author}</b>\n      <p>{content}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      {error && <p className={css.error}>{error}</p>}\n      {loading && <p>...Loading</p>}\n      {Boolean(reviews.length) && <ul>{elements}</ul>}\n    </>\n  );\n};\n\nexport default Reviews;\n","import Reviews from 'components/Reviews/Reviews';\n\nconst ReviewsPage = () =>{\n    return (\n<>\n<Reviews />\n</>\n    )\n}\n\nexport default ReviewsPage;"],"names":["instance","axios","baseURL","params","api_key","language","getTrendingMovies","get","getSearchingMovies","query","concat","getMovieDetails","movieId","getMovieCredits","getMovieReviews","page","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useParams","useEffect","fetchReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getMovieReview","results","_context","prev","next","sent","data","length","t0","message","finish","stop","apply","arguments","elements","map","_ref2","id","author","content","_jsxs","className","css","children","_jsx","_Fragment","Boolean","Reviews"],"sourceRoot":""}