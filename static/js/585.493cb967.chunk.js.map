{"version":3,"file":"static/js/585.493cb967.chunk.js","mappings":"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","sources":["api/movies.js","components/Cast/cast.module.css","components/Cast/Cast.js","pages/CastPage/CastPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd820b0a1af251d95ab4309bc7eecf77f',\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingMovies = () => {\n  return instance.get('/trending/movie/day');\n};\n\nexport const getSearchingMovies = query => {\n  return instance.get(`/search/movie?query=${query}`);\n};\n\nexport const getMovieDetails = movieId => {\n  return instance.get(`/movie/${movieId}`);\n};\n\nexport const getMovieCredits = movieId => {\n  return instance.get(`/movie/${movieId}/credits`);\n};\n\nexport const getMovieReviews = movieId => {\n  return instance.get(`/movie/${movieId}/reviews`, {\n    params: {\n      page: 1,\n    },\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useParams } from 'react-router-dom';\nimport css from './cast.module.css';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from 'api/movies';\n\nexport const Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  const imgURL = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const {\n          data: { cast },\n        } = await getMovieCredits(movieId);\n        // setCast(prevCast =>\n        //   results?.length ? [...prevCast, ...results] : prevCast\n        // );\n        setCast(cast?.length ? cast : []);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  const elements = cast.map(({ id, profile_path, name, character }) => (\n    <li key={id} className={css.item}>\n      <img\n        className={css.cast_item_image}\n        // src={profile_path}\n        src={profile_path ? `${imgURL}/${profile_path}` : defaultImg}\n        width={150}\n        alt={name}\n      />\n      <p>{name}</p>\n      <p>Character: {character}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      {error && <p className={css.error}>{error}</p>}\n      {loading && <p>...Loading</p>}\n      {cast && <ul>{elements}</ul>}\n    </>\n  );\n};\n\nexport default Cast;\n","import Cast from 'components/Cast/Cast';\n\nconst CastPage= () =>{\n    return (\n<>\n<Cast />\n</>\n    )\n}\n\nexport default CastPage;"],"names":["instance","axios","baseURL","params","api_key","language","getTrendingMovies","get","getSearchingMovies","query","concat","getMovieDetails","movieId","getMovieCredits","getMovieReviews","page","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useParams","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getMovieCredit","_cast","_context","prev","next","sent","data","length","t0","message","finish","stop","apply","arguments","elements","map","_ref2","id","profile_path","name","character","_jsxs","className","css","children","_jsx","src","width","alt","_Fragment","Cast"],"sourceRoot":""}